name: "Build, test, commit"
description: "Builds the code, runs the tests and commits the changes"
inputs:
  commit_message:
    description: "The commit message that will be used"
    required: false
    type: string

runs:
  using: "composite"
  steps:
    - name: Build and test the sys crate
      shell: bash
      run: |
        export PATH=$PATH:/github/home/.cargo/bin
        
        folders=("gtk4-layer-shell" "gtk4-session-lock")
        for folder in "${folders[@]}"; do
          echo "Processing sys crate: ${folder}-sys"
          cd "${folder}-sys" || exit 1
          ls
          # Test if there is any output to the gir command
          if [[ $(gir -o . |& wc -l) -ne 0 ]]; then 
            echo "gir -o failed"
            exit 1
          fi
          cargo update
          cargo build --verbose --all-features
          cargo test --verbose
          cargo doc --all-features
          cd ..
        done
    # Exit with an error if there is any output of the gir commands, because then there might be some wrongly generated code or errors
    - name: Build and test the wrapper crate
      shell: bash
      run: |
        export PATH=$PATH:/github/home/.cargo/bin
        folders=("gtk4-layer-shell" "gtk4-session-lock")
        for folder in "${folders[@]}"; do
          echo "Processing wrapper crate: ${folder}"
          cd "${folder}" || exit 1
          ls
          # Test gir commands
          if [[ $(gir -o . |& wc -l) -ne 0 ]]; then
            echo "gir -o failed"
            exit 1
          fi
          if [[ $(gir -o . -m not_bound |& wc -l) -ne 0 ]]; then
            echo "gir not_bound failed"
            exit 1
          fi
          # Check if the docs were generated without a warning
          if [[ $(gir -c Gir.toml --doc-target-path docs.md -m doc |& wc -l) -ne 0 ]]; then
            echo "gir docs failed"
            exit 1
          fi
          # Documentation processing
          cargo install rustdoc-stripper --force
          rustdoc-stripper -s -n --ignore src/manual.rs
          rustdoc-stripper -g -o docs.md
          # Build and test
          cargo update
          cargo build --verbose --all-features
          cargo test --verbose
          cargo doc --all-features
          # Build examples
          cargo build --examples --all-features
          cd ..
        done
    - name: Count the number of files other than the versions.txt files, which were changed
      id: changed_files
      shell: bash
      if: ${{ inputs.commit_message != '' }}
      run: |
        echo "NO_CHANGED_FILES=$(git diff --ignore-submodules --name-only -- . ':(exclude)*/src/auto/versions.txt' ':(exclude)gir' | wc -l)" >> $GITHUB_OUTPUT
    - name: Commit code changes to main
      if: inputs.commit_message != '' && steps.changed_files.outputs.NO_CHANGED_FILES != '0'
      uses: stefanzweifel/git-auto-commit-action@v6
      with:
        commit_message: ${{ inputs.commit_message }}